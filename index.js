const TelegramApi = require('node-telegram-bot-api');
require('dotenv').config('./');
const axios = require('axios').default;
const convert = require('xml-js');
const bot = new TelegramApi(process.env.API_KEY, { polling: true });

let state = 'initial'; //initial | wCategory |  wCurrency | wPrice | wLocation

let data = {
  currency: undefined,
  rate: undefined,
  amount: undefined,
  category: undefined,
  location: undefined,
};

bot.onText(/\/start/, async (msg) => {
  await bot.sendPhoto(msg.chat.id, 'files/main.jpeg', {
    caption: `<b>–ü—Ä–∏–≤–µ—Ç</b>, —è –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –∞—Å–∏—Å—Ç–µ–Ω—Ç ShibaShiping! –ß–µ–º —è –º–æ–≥—É –ø–æ–º–æ—á—å? üêæ`,
    parse_mode: 'HTML',
    reply_markup: JSON.stringify({
      keyboard: [
        ['üßë‚Äçüíª –ö—Ç–æ –º—ã?', '‚òéÔ∏è –ö–æ–Ω—Ç–∞–∫—Ç—ã'],
        ['üíé –û—Ç–∑—ã–≤—ã', 'üí∏ –ö—É—Ä—Å—ã –≤–∞–ª—é—Ç'],
        ['üöö –†–∞—Å—á–∏—Ç–∞—Ç—å –¥–æ—Å—Ç–∞–≤–∫—É', 'üîç –û—Ç—Å–ª–µ–¥–∏—Ç—å –∑–∞–∫–∞–∑'],
      ],
    }),
  });
  state = 'initial';
  data = {
    currency: undefined,
    rate: undefined,
    amount: undefined,
    category: undefined,
    location: undefined,
  };
});

bot.onText(/üßë‚Äçüíª –ö—Ç–æ –º—ã?/, async (msg) => {
  await bot.sendVideo(msg.chat.id, 'files/about.mov', {
    caption: `–ù—É —á—Ç–æ –∂–µ‚Ä¶ –í–æ—Ç –∏ –ø—Ä–∏—à–ª–æ –≤—Ä–µ–º—è –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è –ø–æ–±–ª–∏–∂–µ\n\n–û —Ç–æ–º, –∫—Ç–æ –º—ã –∏ –∫–∞–∫–∏–µ —É –Ω–∞—Å –ø–ª–∞–Ω—ã, –≤—ã –º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å –∏–∑ –≤–∏–¥–µ–æ –≤—ã—à–µ\n\n–ê —Ç–∞–∫–∂–µ, –µ—Å–ª–∏ –≤—ã –µ—â–µ –Ω–µ –∑–Ω–∞–µ—Ç–µ –æ –¥—Ä—É–≥–∏—Ö –Ω–∞—à–∏—Ö —Å–æ—Ü. —Å–µ—Ç—è—Ö - –º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ –∏—Ö –ø–æ —ç—Ç–æ–π —Å—Å—ã–ª–∫–µ: https://linktr.ee/shibashipping\n\n–ö—Å—Ç–∞—Ç–∏, –≤ Inst –º—ã –µ–∂–µ–¥–Ω–µ–≤–Ω–æ –ø–æ—Å—Ç–∏–º –∫–ª–∞—Å—Å–Ω—ã–µ —Ä–∏–ª—Å—ã, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã –Ω–µ —É–≤–∏–¥–∏—Ç–µ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–º–µ, –ø–æ—ç—Ç–æ–º—É —Å —Ä–∞–¥–æ—Å—Ç—å—é –∂–¥—ë–º –≤–∞—Å —Ç–∞–º!ü´Ç`,
    width: 1072,
    height: 1920,
    parse_mode: 'HTML',
  });
});

bot.onText(/üíé –û—Ç–∑—ã–≤—ã/, async (msg) => {
  await bot.sendPhoto(msg.chat.id, 'files/feedback.jpg', {
    caption: `<a href="https://t.me/shibashippingfeedback">–û—Ç–∑—ã–≤—ã –æ –Ω–∞—Å</a>\n\n<a href="https://t.me/shibashippingorders">–í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∑–∞–∫–∞–∑—ã</a>`,
    parse_mode: 'HTML',
  });
});

bot.onText(/‚òéÔ∏è –ö–æ–Ω—Ç–∞–∫—Ç—ã/, async (msg) => {
  await bot.sendPhoto(msg.chat.id, 'files/contacts.jpg', {
    caption: `<a href="https://t.me/shibashipping">–ö–∞–Ω–∞–ª —Å –Ω–æ–≤–æ—Å—Ç—è–º–∏</a>\n\n<a href="https://t.me/nikitapakhomovv">–°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º</a><a href="https://instagram.com/shiba_shipping">\n\ninstagram</a> | <a href='https://www.youtube.com/@shibashipping/shorts'>youtube</a> | <a href='https://dzen.ru/id/638e0dc4e4bbcb36ce5a7993'>–î–∑—ç–Ω</a> | <a href='https://vk.com/shibashipping'>–í–ö</a>`,
    parse_mode: 'HTML',
  });
});

bot.onText(/üí∏ –ö—É—Ä—Å—ã –≤–∞–ª—é—Ç/, async (msg) => {
  const date = new Date();
  const day = date.getDate() < 10 ? `0${date.getDate()}` : `${date.getDate()}`;
  const month =
    date.getMonth() < 10 ? `0${date.getMonth() + 1}` : `${date.getMonth() + 1}`;
  await bot.sendPhoto(msg.chat.id, 'files/photo_2023-01-24 23.04.06.jpeg', {
    parse_mode: 'HTML',
    caption: `<b>–ê–∫—Ç—É–∞–ª—å–Ω—ã–π –∫—É—Ä—Å –≤–∞–ª—é—Ç –Ω–∞ ${day}.${month}.${date.getFullYear()}\n\n</b>USD: ${
      (
        await excangeRates()
      ).USD
    } —Ä—É–±.\nCNY: ${(await excangeRates()).CNY} —Ä—É–±.\nEUR: ${
      (
        await excangeRates()
      ).EUR
    } —Ä—É–±.`,
  });
});
bot.onText(/üöö –†–∞—Å—á–∏—Ç–∞—Ç—å –¥–æ—Å—Ç–∞–≤–∫—É/, async (msg) => {
  state = 'wCategory';
  bot.sendMessage(msg.chat.id, '–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä—é', {
    reply_markup: JSON.stringify({
      keyboard: [
        ['–ê–∫—Å–µ—Å—Å—É–∞—Ä—ã', '–û–¥–µ–∂–¥–∞'],
        ['–û–±—É–≤—å/–ü—É—Ö–æ–≤–∏–∫–∏', '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞'],
      ],
    }),
  });
});

bot.on('message', async (msg) => {
  console.log(state);
  console.log(data);
  if (state === 'wCategory') {
    if (
      !['–ê–∫—Å–µ—Å—Å—É–∞—Ä—ã', '–û–¥–µ–∂–¥–∞', '–û–±—É–≤—å/–ü—É—Ö–æ–≤–∏–∫–∏', '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞'].includes(
        msg.text
      )
    ) {
      return bot.sendMessage(
        msg.chat.id,
        '–Ø –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–∞, –ø–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞'
      );
    }
    data.category = msg.text;
    return bot
      .sendMessage(msg.chat.id, '–í—ã–±–µ—Ä–∏ –≤–∞–ª—é—Ç—É', {
        reply_markup: JSON.stringify({
          keyboard: [['USD'], ['EUR'], ['CNY']],
        }),
      })
      .then((state = 'wCurrency'));
  }
  if (state === 'wCurrency') {
    if (!['USD', 'EUR', 'CNY'].includes(msg.text)) {
      return bot.sendMessage(
        msg.chat.id,
        '–Ø –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–π –≤–∞–ª—é—Ç—ã, –ø–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞'
      );
    }
    data.currency = msg.text;

    return bot
      .sendMessage(msg.chat.id, `–í–≤–µ–¥–∏ —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞ –≤ ${data.currency}`, {
        reply_markup: JSON.stringify({
          hide_keyboard: true,
        }),
      })
      .then((state = 'wPrice'));
  }
  if (state === 'wPrice') {
    if (!msg.text.match(/^[0-9]*[.,]?[0-9]+$/)) {
      return bot.sendMessage(
        msg.chat.id,
        '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ —á–∏—Å–ª–æ. –ù–∞–ø—Ä–∏–º–µ—Ä 102 / 250.02 / 120,1'
      );
    }
    data.amount = parseFloat(msg.text.replace(',', '.'));

    return bot
      .sendMessage(msg.chat.id, `–¢—ã –Ω–∞—Ö–æ–¥–∏—à—å—Å—è –≤ –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥–µ?`, {
        reply_markup: JSON.stringify({
          keyboard: [['–î–∞', '–ù–µ—Ç']],
        }),
      })
      .then((state = 'wLocation'));
  }
  if (state === 'wLocation') {
    if (!['–î–∞', '–ù–µ—Ç'].includes(msg.text)) {
      return bot.sendMessage(
        msg.chat.id,
        '–ù–∞ —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å –º–æ–∂–Ω–æ –æ—Ç–≤–µ—Ç–∏—Ç—å —Ç–æ–ª—å–∫–æ "–î–∞" –∏–ª–∏ "–ù–µ—Ç", –ø–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞'
      );
    }
    data.location = msg.text;
    data.rate = (await excangeRates())[`${data.currency}`];
    console.log(data);
    let result = data.amount * data.rate;
    if (
      (data.currency === 'CNY' && data.amount >= 2000) ||
      (data.currency === 'USD' && data.amount >= 300) ||
      (data.currency === 'EUR' && data.amount >= 250)
    ) {
      result *= 1.08;
    } else {
      result *= 1.05;
      result += 900;
    }

    switch (data.category) {
      case '–ê–∫—Å–µ—Å—Å—É–∞—Ä—ã':
        result += 900;
        break;
      case '–û–¥–µ–∂–¥–∞':
        result += 1200;
        break;
      case '–û–±—É–≤—å/–í–µ—Ä—Ö–Ω—è—è –æ–¥–µ–∂–¥–∞':
        result += 1700;
        break;
      case '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞':
        result += 4000;
        break;
      default:
        result = 0;
    }
    console.log(result);
    if (data.location === '–ù–µ—Ç') result += 600;

    bot.sendMessage(
      msg.chat.id,
      `–ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏: ${Math.ceil(result)}‚ÇΩ`,
      {
        reply_markup: JSON.stringify({
          keyboard: [
            ['üßë‚Äçüíª –ö—Ç–æ –º—ã?', '‚òéÔ∏è –ö–æ–Ω—Ç–∞–∫—Ç—ã', 'üíé –û—Ç–∑—ã–≤—ã'],
            ['üöö –†–∞—Å—á–∏—Ç–∞—Ç—å –¥–æ—Å—Ç–∞–≤–∫—É', 'üí∏ –ö—É—Ä—Å—ã –≤–∞–ª—é—Ç', 'üîç –û—Ç—Å–ª–µ–¥–∏—Ç—å –∑–∞–∫–∞–∑'],
          ],
        }),
      }
    );
    state = 'initial';
    data = {
      currency: undefined,
      rate: undefined,
      amount: undefined,
      category: undefined,
      location: undefined,
    };
    return;
  }
  state = 'initial';
  data = {
    currency: undefined,
    rate: undefined,
    amount: undefined,
    category: undefined,
    location: undefined,
  };
});

async function excangeRates() {
  const arr = ['USD', 'EUR', 'CNY'];
  const xml = await (
    await axios.get('http://www.cbr.ru/scripts/XML_daily.asp')
  ).data;
  const res = [];
  const rate = JSON.parse(convert.xml2json(xml)).elements[0].elements;
  for (let el of rate) {
    if (arr.includes(el.elements[1].elements[0].text)) {
      res.push(parseFloat(el.elements[4].elements[0].text.replace(',', '.')));
    }
  }
  res[0] += 5;
  res[1] += 5;
  res[2] += 1;
  return {
    USD: parseFloat(res[0].toFixed(2)),
    EUR: parseFloat(res[1].toFixed(2)),
    CNY: parseFloat(res[2].toFixed(2)),
  };
}
